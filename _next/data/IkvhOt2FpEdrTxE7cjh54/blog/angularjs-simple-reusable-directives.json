{"pageProps":{"post":{"title":"AngularJS: Simple, reusable directives","date":"2014-04-24","slug":"angularjs-simple-reusable-directives","content":"<h1>AngularJS: Simple, reusable directives</h1>\n<p>Directives in Angular give you the power to do a lot. Sometimes, you need to do a lot. Most of the time you just need something simple that will get the job done. Here are a few examples of reusable directives that do only what they need to do.</p>\n<p>First, a directive that can be applied to a button group. Keep in mind this isn’t restricted to a button group, and if you think creatively, it can come be applied in a lot of places.</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">mod<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">directive</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"radioValue\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    restrict<span class=\"token punctuation\">:</span> <span class=\"token string\">\"A\"</span><span class=\"token punctuation\">,</span>\n    require<span class=\"token punctuation\">:</span> <span class=\"token string\">\"^ngModel\"</span><span class=\"token punctuation\">,</span>\n    scope<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      radioValue<span class=\"token punctuation\">:</span> <span class=\"token string\">\"=\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">link</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">scope<span class=\"token punctuation\">,</span> elem<span class=\"token punctuation\">,</span> attrs<span class=\"token punctuation\">,</span> ngModelCtrl</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      elem<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        scope<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">$apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          ngModelCtrl<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">$setViewValue</span><span class=\"token punctuation\">(</span>scope<span class=\"token punctuation\">.</span><span class=\"token property-access\">radioValue</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      scope<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">$watch</span><span class=\"token punctuation\">(</span>\n        <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">return</span> ngModelCtrl<span class=\"token punctuation\">.</span><span class=\"token property-access\">$modelValue</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">newVal</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          elem<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toggleClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"selected\"</span><span class=\"token punctuation\">,</span> newVal <span class=\"token operator\">===</span> scope<span class=\"token punctuation\">.</span><span class=\"token property-access\">radioValue</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>Not impressed? You don’t have to be. Keep it simple. Here’s an example of how this directive would be used.</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&#x3C;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">'btn-group'</span> ng<span class=\"token operator\">-</span>model<span class=\"token operator\">=</span><span class=\"token string\">'ctrl.animal'</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&#x3C;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">'btn'</span> radio<span class=\"token operator\">-</span>value<span class=\"token operator\">=</span><span class=\"token string\">'\"Dog\"'</span><span class=\"token operator\">></span><span class=\"token maybe-class-name\">Dog</span><span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&#x3C;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">'btn'</span> radio<span class=\"token operator\">-</span>value<span class=\"token operator\">=</span><span class=\"token string\">'\"Cat\"'</span><span class=\"token operator\">></span><span class=\"token maybe-class-name\">Cat</span><span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&#x3C;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">'btn'</span> radio<span class=\"token operator\">-</span>value<span class=\"token operator\">=</span><span class=\"token string\">'\"Pig\"'</span><span class=\"token operator\">></span><span class=\"token maybe-class-name\">Pig</span><span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n</code></pre>\n<p>Full demo: <a href=\"http://jsfiddle.net/xQCRB/2/\">http://jsfiddle.net/xQCRB/2/</a></p>\n<p>The beauty of the directive, to me, is that we take advantage of an existing controller and the directive’s ability to require parent controllers to provide mutually exclusive selection on a model value.</p>\n<p>Here’s one more simple directive and how it can be used. It’s actually quite similar.</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">app<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">directive</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"setValueOnClick\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    restrict<span class=\"token punctuation\">:</span> <span class=\"token string\">\"A\"</span><span class=\"token punctuation\">,</span>\n    require<span class=\"token punctuation\">:</span> <span class=\"token string\">\"^ngModel\"</span><span class=\"token punctuation\">,</span>\n    scope<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      setValueOnClick<span class=\"token punctuation\">:</span> <span class=\"token string\">\"=\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">link</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">scope<span class=\"token punctuation\">,</span> elem<span class=\"token punctuation\">,</span> attrs<span class=\"token punctuation\">,</span> ngModelCtrl</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      elem<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        scope<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">$apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          ngModelCtrl<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">$setViewValue</span><span class=\"token punctuation\">(</span>scope<span class=\"token punctuation\">.</span><span class=\"token property-access\">setValueOnClick</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>And it’s usage</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&#x3C;</span>div ng<span class=\"token operator\">-</span>controller<span class=\"token operator\">=</span><span class=\"token string\">\"Controller as ctrl\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&#x3C;</span>div ng<span class=\"token operator\">-</span>model<span class=\"token operator\">=</span><span class=\"token string\">\"ctrl.number\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&#x3C;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"number\"</span> ng<span class=\"token operator\">-</span>repeat<span class=\"token operator\">=</span><span class=\"token string\">\"num in ctrl.numbers\"</span> <span class=\"token keyword\">set</span><span class=\"token operator\">-</span>value<span class=\"token operator\">-</span>on<span class=\"token operator\">-</span>click<span class=\"token operator\">=</span><span class=\"token string\">\"num\"</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>num<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&#x3C;</span>h2<span class=\"token operator\">></span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>ctrl<span class=\"token punctuation\">.</span><span class=\"token property-access\">number</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>h2<span class=\"token operator\">></span>\n<span class=\"token operator\">&#x3C;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n</code></pre>\n<p>Working example: <a href=\"http://jsfiddle.net/NsUvV/1/\">http://jsfiddle.net/NsUvV/1/</a></p>\n<p>The latter directive can be used in dropdown menus and several other places. It saves us the trouble of adding a controller callback, and can be applied to any DOM element quite easily. It is especially useful within <code>ng-repeat</code> to easily set the value to a property of a repeated element.</p>\n<p>You could also alter it to have an <code>ng-model</code> on each repeated element, removing the need to use <code>ng-model</code> on the parent.</p>\n<p>And that’s it, really. I just wanted to show how a lot of times simple solutions are all we need. You can go grab Bootstrap, Foundation, or any custom CSS, and easily build a dropdown menu or button group, then apply a few attributes to have a fully functional control.</p>\n<p>The implementations above are not optimal and are intended for easy consumption. By utilizing <code>$parse</code> and making assumptions that the value we are assigning won’t change, we can save a few watch expressions. For the radioValue directive you could refactor away the watching of the model value as well with a little work. These micro-optimizations are nice, but if your web application gets to a point where they are necessary, you probably have too much going on. I like to keep the code clean and readable whenever possible (even at the cost of a bit of performance).</p>\n<p>For an optimized and more advanced implementation I recommend taking a look at some of the directives in <a href=\"https://mgcrea.github.io/angular-strap/\">AngularStrap</a>. Here is the source for their button directives.</p>\n<p><a href=\"https://github.com/mgcrea/angular-strap/blob/master/src/button/button.js\">https://github.com/mgcrea/angular-strap/blob/master/src/button/button.js</a></p>\n<p>Where <code>bsRadioGroup</code> and <code>bsRadio</code> would be the radio buttons.</p>"}},"__N_SSG":true}